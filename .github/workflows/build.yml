name: Docker
on: [push]
jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - name: Prepare
        id: prepare
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo ::set-output name=version::${GITHUB_REF#refs/tags/v}
          elif [[ $GITHUB_REF == refs/heads/master ]]; then
            echo ::set-output name=version::latest
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            echo ::set-output name=version::${GITHUB_REF#refs/heads/}
          else
            echo ::set-output name=version::snapshot
          fi
          echo ::set-output name=build_date::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          echo ::set-output name=docker_platforms::linux/amd64,linux/arm64/v8
          echo ::set-output name=docker_image::${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}
        # https://github.com/crazy-max/ghaction-docker-buildx
      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          version: latest

      - name: Environment
        run: |
          echo home=$HOME
          echo git_ref=$GITHUB_REF
          echo git_sha=$GITHUB_SHA
          echo version=${{ steps.prepare.outputs.version }}
          echo date=${{ steps.prepare.outputs.build_date }}
          echo image=${{ steps.prepare.outputs.docker_image }}
          echo platforms=${{ steps.prepare.outputs.docker_platforms }}
          echo avail_platforms=${{ steps.buildx.outputs.platforms }}
        # https://github.com/actions/checkout
      - name: Checkout
        uses: actions/checkout@v2

      - name: Docker Login
        if: success()
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "${DOCKER_PASSWORD}" | docker login --username "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: Docker Buildx (push)
        if: success()
        run: |
          docker buildx build \
            --platform ${{ steps.prepare.outputs.docker_platforms }} \
            --output "type=image,push=true" \
            --build-arg "VERSION=${{ steps.prepare.outputs.version }}" \
            --build-arg "BUILD_DATE=${{ steps.prepare.outputs.build_date }}" \
            --build-arg "VCS_REF=${GITHUB_SHA}" \
            --tag "${{ steps.prepare.outputs.docker_image }}:${GITHUB_SHA}" \
            --tag "${{ steps.prepare.outputs.docker_image }}:latest" \
            --file Dockerfile .
      - name: Clear
        if: always()
        run: |
          rm -f ${HOME}/.docker/config.json


  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Setup Kustomize
        uses: imranismail/setup-kustomize@v1
        with:
          kustomize-version: "3.6.1"

      - name: Update Kubernetes resources
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          cd kubernetes
          kustomize edit set image ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}=${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:$GITHUB_SHA

      - name: Commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -am "update image tag"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
